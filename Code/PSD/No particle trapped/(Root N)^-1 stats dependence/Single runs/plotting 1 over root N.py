import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d
import scipy.optimize as spo

#Data for single runs of N points for Calcs

N = [10, 100, 200, 300, 400, 500, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 15000, 20000, 30000, 40000, 60000, 70000, 80000, 90000, 50000, 100000, 420, 440, 460, 480]
SD1 = 0.1*np.array([0.000360303922155698, 0.00808438825278124, 0.0007852538603275579, 0.0008299122005007969, 0.007722658557486302, 0.0576143575000171, 0.049974165166704845, 0.048013119729970195, 0.04485054746684925, 0.040700213130735435, 0.034575515426621004, 0.03368816103941108, 0.029995813451831627, 0.026493131255655045, 0.027484221773566856, 0.023870604121961854, 0.02147759025333139, 0.017527267368566586, 0.015215720367015063, 0.01265846932832079, 0.011201934692745896, 0.008381172681518903, 0.00874703886193984, 0.007721722874360163, 0.012030867486830962, 0.007401952443542252, 0.002119784430021409, 0.037570450171529546, 0.05390003842079128, 0.05530312165479708]) 
SD2 = 0.1*np.array([0.00039469317144457685, 0.008455727407543207, 0.0009563676986066254, 0.0011597707602470063, 0.008232244630174848, 0.058060071611714226, 0.049689237092027036, 0.047676151128286604, 0.044648792006693035, 0.040533373564054044, 0.034425667406182296, 0.03355234189966704, 0.029821969298801303, 0.026163637500727206, 0.02725637797299586, 0.023435353127096364, 0.021273310111090793, 0.017633515238717045, 0.015068343137736046, 0.012508340623582257, 0.011152888349333513, 0.008435845996677264, 0.00863947520065383, 0.007777464966376741,0.011966457657849117, 0.007437524611328181, 0.0031995976005516976, 0.03811491660440853, 0.054779040414020895, 0.055636557860196396]) 

mvSD1 = 1000*SD1
mvSD2 = 1000*SD2

def one_over_rootN(x,a,b):  #a is amplitude  #b is mean   #c is standard deviation   #d is a y shift
    return a*((x)**b)



x = np.arange(500,100000,1)
xx = np.arange(1,100000,1)

#This fit fits from N=5000 onwards, so technically the equation it gives needs a x shift 
#of 500 to be the actual equation of the fit curve

p=[250, -0.5] #a is amplitude  #b is mean   #c is standard deviation   #d is a y shift
fit,cov=spo.curve_fit(one_over_rootN, N[9:-4], mvSD1[9:-4], p)
plt.plot(x, one_over_rootN(x, *fit), color='red', linewidth = 5)
sig0 = np.sqrt(cov[0,0])
sig1 = np.sqrt(cov[1,1])


#plt.plot(x,one_over_rootN(x,250,-0.5))

plt.grid()
plt.title('Standard Deviation vs Number of Points', fontsize = 40)
plt.xlabel('Number of Points in run (N)', fontsize = 30)
plt.ylabel('Standard Deviation of Run (mV)', fontsize = 30)
plt.xticks(fontsize = 30)
plt.yticks(fontsize = 30)
plt.axvline(x=500, color = 'green', linewidth=4)
plt.plot(N,mvSD1, 'bx', markersize = 20)
#plt.plot(N,mvSD1, 'bx')
plt.show()

print(*fit)
print('a = %.10f +- %.4f' %(fit[0],sig0))
print('b = %.10f +- %.4f' %(fit[1],sig1))
print('Equation')
print(*fit)
